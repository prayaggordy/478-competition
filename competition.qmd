---
title: "Competition"
author: "Prayag Gordy"
format: html
---

To run the code, download `neuron-synapse-prediction` folder from Kaggle and put it at the project level.

```{r}
#| message: false
raw_train <- readr::read_csv("neuron-synapse-prediction/train_data.csv") |>
	dplyr::mutate(connected = forcats::as_factor(connected) |>
									forcats::fct_relevel(c("TRUE", "FALSE")))
feature_weights <- readr::read_csv("neuron-synapse-prediction/feature_weights.csv")
morph_embeddings <- readr::read_csv("neuron-synapse-prediction/morph_embeddings.csv")
```

```{r}
#| message: false
library(tidymodels)
library(doMC)
source("feature_engineering.R")
```

```{r}
set.seed(123)
trees_split <- initial_split(raw_train, strata = connected)
trees_train <- training(trees_split)
trees_test <- testing(trees_split)
```

```{r}
trees_train_fe <- do_feature_engineering(trees_train, fe_type = "training")
```

```{r}
trees_test_fe <- do_feature_engineering(trees_test, fe_type = "testing")
```

```{r}
tree_rec <- recipe(connected ~ ., data = trees_train_fe) |>
	update_role(ID, pre_nucleus_id, post_nucleus_id, new_role = "ID") |>
	themis::step_upsample(connected, over_ratio = 1)
```

```{r}
simple_logistic <- glm(connected ~ ., data = tree_rec |> prep() |> juice(), family = "binomial")
```

```{r}
test_pred <- predict(simple_logistic, trees_test_fe, type = "response") |>
	magrittr::is_less_than(0.5) |>
	factor()
```

```{r}
bal_accuracy(data.frame(x = factor(trees_test_fe$connected == "TRUE"),
												y = test_pred),
						 truth = x,
						 estimate = y)
```

```{r}
DF_TEST <- readr::read_csv("neuron-synapse-prediction/leaderboard_data.csv") |>
	do_feature_engineering(fe_type = "testing")
```

```{r}
TEST_PREDICTIONS <- predict(simple_logistic, DF_TEST, type = "response") |>
	magrittr::is_less_than(0.5) |>
	as.character() |>
	stringr::str_to_title()
```

```{r}
tibble::tibble(ID = DF_TEST$ID,
							 connected = TEST_PREDICTIONS) |>
	readr::write_csv("simple_logistic_preds.csv")
```






